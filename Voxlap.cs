using System.IO;

namespace Voxels {
    /// <summary>
    /// Support for reading .VOX files generated by Ken Silverman's Voxlap Engine.
    /// http://advsys.net/ken/voxlap.htm
    /// </summary>
    public class Voxlap {
        static VoxelData Read(BinaryReader reader) {

            // Read dimensions
            var sx = reader.ReadInt32();
            var sy = reader.ReadInt32();
            var sz = reader.ReadInt32();
            var size = new XYZ(sx, sy, sz);

            var colors = new Color[256];
            var voxelData = new VoxelData(size, colors);

            // Read voxels
            for (var x = 0; x < sx; x++) {
                for (var y = 0; y < sy; y++) {
                    for (var z = 0; z < sz; z++) {
                        // Flip Y and Z to line up with MagicaVoxel import
                        voxelData[new XYZ(x, (size.Y - 1) - y, (size.Z - 1) - z)] = new Voxel((uint)(reader.ReadByte() + 1)); // Colors start at index 1 for MagicaVoxel
                    }
                }
            }

            // Colors start at index 1 for MagicaVoxel
            for (var i = 1; i < colors.Length; ++i) {
                var r = (byte)(reader.ReadByte() * 4); // Range 0-63 so *4
                var g = (byte)(reader.ReadByte() * 4); // Range 0-63 so *4
                var b = (byte)(reader.ReadByte() * 4); // Range 0-63 so *4
                colors[i] = new Color(r, g, b);
            }

            return voxelData;
        }

        public static VoxelData Read(Stream stream) {
            return Read(new BinaryReader(stream));
        }
    }
}
